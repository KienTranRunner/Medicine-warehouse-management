@using System.Globalization
@{
    ViewData["Title"] = "Xuất kho ";
}
@{
    Layout = "~/Areas/Dashboard/Views/Shared/AdminLayout.cshtml";
}




<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Danh sách phiếu xuất kho</h4>
            <button type="button" class="btn btn-danger btn-icon-text" data-toggle="modal" data-target="#createModal">
                <i class="fa fa-plus btn-icon-prepend"></i> Lập phiếu xuất
            </button>
            <button type="button" class="btn btn-info btn-icon-text"
                onclick="window.location.href='/Dashboard/XuatKho/ExportExcel'">
                Xuất Excel Xuất Kho <i class="fa fa-file-excel-o btn-icon-append"></i>
            </button>


            <div class="row mb-3 mt-3">
                <div class="col-md-3">
                    <input type="date" id="startDate" class="form-control" placeholder="Từ ngày"
                        value="@ViewBag.StartDate" />
                </div>

                <div class="col-md-3">
                    <input type="date" id="endDate" class="form-control" placeholder="Đến ngày"
                        value="@ViewBag.EndDate" />
                </div>
                <div class="col-md-3">
                    <button type="button" class="btn btn-primary" onclick="filterByDate()">
                        <i class="fa fa-filter"></i> Lọc
                    </button>
                </div>
            </div>


            <script>
                function filterByDate() {
                    const startDate = document.getElementById("startDate").value;
                    const endDate = document.getElementById("endDate").value;

                    if (!startDate || !endDate) {
                        alert("Vui lòng chọn cả hai ngày để lọc.");
                        return;
                    }

                    // Chuyển hướng tới trang với query string
                    const url = `?startDate=${startDate}&endDate=${endDate}`;
                    window.location.href = url;
                }

            </script>


            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Số phiếu</th>
                            <th>Số chứng từ</th>
                            <th>Ngày xuất</th>
                            <th>Mã nhân viên lập phiếu</th>
                            <th>Lý do xuất</th>
                            <th>Thành tiền</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.SoPhieu</td>
                                <td>@item.SoChungTu</td>
                                <td>@item.NgayXuat.ToString("dd/MM/yyyy")</td>
                                <td>@item.MaNVLapPhieu</td>
                                <td>@item.LyDoXuat</td>
                                <td>@item.ThanhTien.ToString("C0", new CultureInfo("vi-VN"))</td>
                                <td>
                                    <button type="button" class="btn btn-info btn-icon-text" data-toggle="modal"
                                        data-target="#infoModal" onclick="openInfoModal(@item.SoPhieu)">
                                        <i class="fa fa-info btn-icon-prepend"></i> Xem chi tiết
                                    </button>
                                    @if (User.IsInRole("Admin") || @User.FindFirst("MaNhanVien")?.Value ==
                                   @item.MaNVLapPhieu.ToString())
                                    {
                                        <button type="button" class="btn btn-primary btn-icon-text" data-toggle="modal"
                                            data-target="#editModal" onclick="openEditModal(@item.SoPhieu)">
                                            <i class="fa fa-file btn-icon-prepend"></i> Sửa
                                        </button>
                                    }
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <button type="button" class="btn btn-danger btn-icon-text"
                                            onclick="confirmDelete(@item.SoPhieu)">
                                            <i class="fa fa-trash btn-icon-prepend"></i> Xoá
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Phiếu xuất kho</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/Dashboard/XuatKho/Create" method="post">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="SoChungTu">Số chứng từ</label>
                        <input type="text" class="form-control" id="SoChungTu" name="SoChungTu" required>
                    </div>
                    <div class="form-group">
                        <label for="NgayXuat">Ngày xuất</label>
                        <input type="date" class="form-control" id="NgayXuat" name="NgayXuat" required readonly>
                    </div>
                    <script>
                        window.onload = function () {
                            var today = new Date();
                            var dd = String(today.getDate()).padStart(2, '0');
                            var mm = String(today.getMonth() + 1).padStart(2, '0');
                            var yyyy = today.getFullYear();

                            today = yyyy + '-' + mm + '-' + dd;

                            document.getElementById("NgayXuat").value = today;
                        };

                    </script>
                    <div class="form-group">
                        <label for="LyDoXuat">Lý do xuất</label>
                        <input type="text" class="form-control" id="LyDoXuat" name="LyDoXuat" required>
                    </div>
                    <div class="form-group">
                        <label for="MaTaiKhoan">Mã Tài khoản người lập phiếu</label>
                        <input type="text" class="form-control" id="MaTaiKhoan" name="MaTaiKhoan"
                            value="@User.FindFirst("MaTaiKhoan")?.Value" required readonly>
                    </div>

                    <div class="form-group">
                        <label for="MaKhachHang">Mã Khách Hàng</label>
                        <select class="form-control" id="MaKhachHang" name="MaKhachHang" required>
                            <option value="">Khách Hàng</option>
                            @foreach (var kh in ViewBag.KhachHangs)
                            {
                                <option value="@kh.MaKhachHang">@kh.TenKhachHang - @kh.DiaChi - @kh.SoDienThoai</option>
                            }
                        </select>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered mt-3" id="MedicinesTable">
                            <thead>
                                <tr>
                                    <th>Mã Thuốc</th>
                                    <th>Số Lô</th>
                                    <th>Số Lượng Hiện Tại</th>
                                    <th>Hạn Sử Dụng</th>
                                    <th>Số Lượng Xuất</th>
                                    <th>Đơn Vị Tính</th>
                                    <th>Đơn Giá</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <select class="form-control" name="Medicines[0].MaThuoc"
                                            onchange="loadMedicineBatches(this, 0); showDonViTinh(this)" required>
                                            <option value="">Thuốc</option>
                                            @foreach (var t in ViewBag.Thuocs)
                                            {
                                                <option value="@t.MaThuoc" data-dvt="@t.DonViTinh">@t.TenThuoc</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <select class="form-control" name="Medicines[0].SoLo" required>
                                            <option value="">Chọn Số Lô</option>
                                        </select>
                                    </td>
                                    <td><input type="number" class="form-control" name="Medicines[0].SoLuongHienTai"
                                            readonly></td>
                                    <td><input type="date" class="form-control" name="Medicines[0].HanSuDung" readonly>
                                    </td>
                                    <td><input type="number" class="form-control" name="Medicines[0].SoLuongXuat"
                                            required oninput="validateQuantity(this)" placeholder="Số lượng xuất"></td>
                                    <td><input type="text" class="form-control" name="Medicines[0].DonViTinh" readonly>
                                    </td>
                                    <td><input type="number" class="form-control" name="Medicines[0].DonGia"
                                            oninput="validatePositiveValue(this)" required>
                                    </td>
                                    <td><button type="button" class="btn btn-danger"
                                            onclick="removeRow(this)">Xóa</button></td>
                                </tr>
                            </tbody>


                        </table>
                    </div>

                    <button type="button" class="btn btn-secondary mt-3" onclick="addRow()">Thêm thuốc</button>
                    <button type="submit" class="btn btn-primary mt-3">Lưu</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    let medicineIndex = 1;

    function addRow() {
        const table = document.getElementById('MedicinesTable').getElementsByTagName('tbody')[0];
        const newRow = table.insertRow();
        const rowIndex = medicineIndex++;

        newRow.innerHTML = `
    <tr>
        <td>
            <select class="form-control" name="Medicines[${rowIndex}].MaThuoc" onchange="handleMedicineChange(this, ${rowIndex})" required>
                <option value="">Thuốc</option>
    @foreach (var t in ViewBag.Thuocs)
    {
                                                                                            <option value="@t.MaThuoc" data-dvt="@t.DonViTinh">@t.TenThuoc</option>
    }
            </select>
        </td>
        <td>
            <select class="form-control" name="Medicines[${rowIndex}].SoLo" required>
                <option value="">Chọn Số Lô</option>
            </select>
        </td>
        <td><input type="number" class="form-control" name="Medicines[${rowIndex}].SoLuongHienTai" readonly></td>
        <td><input type="date" class="form-control" name="Medicines[${rowIndex}].HanSuDung" readonly></td>
        <td><input type="number" class="form-control" name="Medicines[${rowIndex}].SoLuongXuat"  oninput="validateQuantity(this)" placeholder="Số lượng xuất" required></td>
        <td><input type="text" class="form-control" name="Medicines[${rowIndex}].DonViTinh" readonly></td>
        <td><input type="number" class="form-control" name="Medicines[${rowIndex}].DonGia" required oninput="validatePositiveValue(this)"> </td>
        <td><button type="button" class="btn btn-danger" onclick="removeRow(this)">Xóa</button></td>
    </tr>
    `;
        updateOptionsInAllRows();
    }

    function removeRow(button) {
        const row = button.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }

    function handleMedicineChange(selectElement, rowIndex) {
        showDonViTinh(selectElement);
        loadMedicineBatches(selectElement, rowIndex);
    }

    function showDonViTinh(selectElement) {
        const selectedOption = selectElement.options[selectElement.selectedIndex];
        const donViTinh = selectedOption.getAttribute('data-dvt');
        const row = selectElement.closest('tr');
        row.querySelector('input[name$=".DonViTinh"]').value = donViTinh;
    }

    function loadMedicineBatches(selectElement, rowIndex) {
        const medicineId = selectElement.value;

        if (!medicineId) return;

        fetch(`/Dashboard/XuatKho/chiTietLo/${medicineId}`)
            .then(response => response.json())
            .then(data => {
                const row = selectElement.closest('tr');
                const soLoDropdown = row.querySelector(`select[name="Medicines[${rowIndex}].SoLo"]`);
                const soLuongHienTaiInput = row.querySelector(`input[name="Medicines[${rowIndex}].SoLuongHienTai"]`);
                const hanSuDungInput = row.querySelector(`input[name="Medicines[${rowIndex}].HanSuDung"]`);

                soLoDropdown.innerHTML = `<option value="">Chọn Số Lô</option>`;

                data.forEach(batch => {
                    const option = document.createElement('option');
                    option.value = batch.soLo;
                    option.textContent = `${batch.soLo} - SL Hiện Tại: ${batch.soLuongHienTai}`;
                    option.dataset.soLuongHienTai = batch.soLuongHienTai;
                    option.dataset.hanSuDung = batch.hanSuDung;
                    soLoDropdown.appendChild(option);
                });

                soLoDropdown.addEventListener('change', () => {
                    const selectedOption = soLoDropdown.options[soLoDropdown.selectedIndex];
                    soLuongHienTaiInput.value = selectedOption.dataset.soLuongHienTai || '';
                    hanSuDungInput.value = selectedOption.dataset.hanSuDung || '';
                });
            })
            .catch(error => console.error('Error fetching batch data:', error));
    }

    function validateQuantity(input) {
        const currentQuantity = parseFloat(input.value);
        const row = input.closest('tr');
        const availableQuantity = parseFloat(row.querySelector('input[name*="SoLuongHienTai"]').value);

        if (currentQuantity < 0 || currentQuantity > availableQuantity) {
            alert("Số lượng nhập không hợp lệ: Số lượng nhập phải lớn hơn hoặc bằng 0 và không lớn hơn số lượng hiện tại.");
            input.value = "";
        }
    }

    function updateOptionsInAllRows() {
        const selectedMedicines = Array.from(document.querySelectorAll('select[name^="Medicines"]'))
            .map(select => select.value)
            .filter(value => value);

        document.querySelectorAll('select[name^="Medicines"]').forEach(select => {
            Array.from(select.options).forEach(option => {
                if (option.value) {
                    option.disabled = selectedMedicines.includes(option.value) && option.value !== select.value;
                }
            });
        });
    }

    function validatePositiveValue(input) {
        const value = parseFloat(input.value);

        // Kiểm tra giá trị âm
        if (value < 0) {
            alert("Giá trị không hợp lệ: Không được nhập số âm.");
            input.value = "";
        }
    }

</script>
<script>
    $(document).ready(function () {
        var errorMessage = '@Html.Raw(TempData["ErrorMessage"])';
        if (errorMessage) {
            alert(errorMessage);
            $('#createModal').modal('show');
        }
    });
</script>

<div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="infoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="infoModalLabel">Chi tiết phiếu xuất kho</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="infoSoPhieu" />

                <div class="form-group">
                    <label for="infoSoChungTu">Số chứng từ</label>
                    <input type="text" class="form-control" id="infoSoChungTu" readonly>
                </div>
                <div class="form-group">
                    <label for="infoNgayXuat">Ngày xuất</label>
                    <input type="date" class="form-control" id="infoNgayXuat" readonly>
                </div>
                <div class="form-group">
                    <label for="infoLyDoXuat">Lý do xuất</label>
                    <input type="text" class="form-control" id="infoLyDoXuat" readonly>
                </div>

                <div class="form-group">
                    <label for="infoMaKhachHang">Khách Hàng</label>
                    <select class="form-control" id="infoMaKhachHang" disabled>
                        <option value="">Khách Hang</option>
                        @foreach (var kh in ViewBag.KhachHangs)
                        {
                            <option value="@kh.MaKhachHang">@kh.TenKhachHang - @kh.DiaChi - @kh.SoDienThoai</option>
                        }
                    </select>
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered mt-3" id="infoMedicinesTable">
                        <thead>
                            <tr>
                                <th>Tên Thuốc</th>
                                <th>Số Lô</th>
                                <th>Đơn Vị Tính</th>
                                <th>Số Lượng Xuất</th>
                                <th>Đơn Giá</th>
                            </tr>
                        </thead>
                        <tbody id="infoMedicinesBody">
                        </tbody>
                    </table>
                </div>

                <div class="mt-3">
                    <h5>Tổng tiền xuất: <span id="totalCost"></span> VND</h5>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function openInfoModal(soPhieu) {
        $.ajax({
            url: `/Dashboard/XuatKho/Edit/${soPhieu}`,
            method: 'GET',
            success: function (phieuXuat) {
                document.getElementById('infoSoPhieu').value = phieuXuat.soPhieu;
                document.getElementById('infoSoChungTu').value = phieuXuat.soChungTu;
                document.getElementById('infoNgayXuat').value = phieuXuat.ngayXuat.split('T')[0];
                document.getElementById('infoLyDoXuat').value = phieuXuat.lyDoXuat;
                document.getElementById('infoMaKhachHang').value = phieuXuat.maKhachHang;

                const tbody = document.getElementById('infoMedicinesBody');
                tbody.innerHTML = '';
                let totalCost = 0;

                phieuXuat.medicines.forEach(med => {
                    const row = `
                                    <tr>
                                        <td>${med.tenThuoc}</td> 
                                        <td>${med.soLo}</td>
                                        <td>${med.donViTinh}</td>
                                        <td>${med.soLuongXuat}</td>
                                        <td>${med.donGia.toLocaleString()} VND</td>
                                    </tr>
                                `;
                    tbody.insertAdjacentHTML('beforeend', row);
                    totalCost += med.soLuongXuat * med.donGia;
                });

                document.getElementById('totalCost').innerText = totalCost.toLocaleString();

                $('#infoModal').modal('show');
            },
            error: function () {
                alert("Không thể tải dữ liệu phiếu nhập.");
            }
        });
    }
</script>




<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Chỉnh sửa phiếu xuất kho</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editForm" action="/Dashboard/XuatKho/Edit" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="SoPhieu" id="editSoPhieu" />

                    <div class="form-group">
                        <label for="editSoChungTu">Số chứng từ</label>
                        <input type="text" class="form-control" id="editSoChungTu" name="SoChungTu" required>
                    </div>
                    <div class="form-group">
                        <label for="editNgayXuat">Ngày xuất</label>
                        <input type="date" class="form-control" id="editNgayXuat" name="NgayXuat" required readonly>
                    </div>
                    <div class="form-group">
                        <label for="editLyDoXuat">Lý do xuất</label>
                        <input type="text" class="form-control" id="editLyDoXuat" name="LyDoXuat" required>
                    </div>
                    <div class="form-group">
                        <label for="editMaKhachHang">Khách Hàng</label>
                        <select class="form-control" id="editMaKhachHang" name="MaKhachHang" required>
                            <option value="">Khách Hàng</option>
                            @foreach (var kh in ViewBag.KhachHangs)
                            {
                                <option value="@kh.MaKhachHang">@kh.TenKhachHang - @kh.DiaChi - @kh.SoDienThoai</option>
                            }
                        </select>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered mt-3" id="editMedicinesTable">
                            <thead>
                                <tr>
                                    <th>Mã Thuốc</th>
                                    <th>Số Lô</th>
                                    <th>Số Lượng Hiện Tại</th>
                                    <th>Hạn Sử Dụng </th>
                                    <th>Số Lượng Xuất</th>
                                    <th>Đơn Vị Tính</th>
                                    <th>Đơn Giá</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="editMedicinesBody"></tbody>
                        </table>
                    </div>

                    <button type="button" class="btn btn-secondary mt-3" onclick="addEditRowEdit()">Thêm thuốc</button>
                    <button type="submit" class="btn btn-primary mt-3">Lưu thay đổi</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openEditModal(soPhieu) {
        $.ajax({
            url: `/Dashboard/XuatKho/Edit/${soPhieu}`,
            method: 'GET',
            success: function (phieuXuat) {
                console.log("Received medicines:", phieuXuat.medicines);
                document.getElementById('editSoPhieu').value = phieuXuat.soPhieu;
                document.getElementById('editSoChungTu').value = phieuXuat.soChungTu;
                document.getElementById('editNgayXuat').value = phieuXuat.ngayXuat.split('T')[0];
                document.getElementById('editLyDoXuat').value = phieuXuat.lyDoXuat;
                document.getElementById('editMaKhachHang').value = phieuXuat.maKhachHang;

                $.ajax({
                    url: `/Dashboard/NhapKho/GetMedicines`,
                    method: 'GET',
                    success: function (medicines) {
                        const tbody = document.getElementById('editMedicinesBody');
                        tbody.innerHTML = '';

                        phieuXuat.medicines.forEach((med, index) => {
                            addMedicineRow(med, index, medicines);
                        });

                        $('#editModal').modal('show');
                    },
                    error: function () {
                        alert("Không thể tải dữ liệu thuốc.");
                    }
                });
            },
            error: function () {
                alert("Không thể tải dữ liệu phiếu xuất.");
            }
        });
    }
    let rowCount = 0;

    function addEditRowEdit() {
        $.ajax({
            url: `/Dashboard/NhapKho/GetMedicines`,
            method: 'GET',
            success: function (medicines) {
                addMedicineRow(null, rowCount, medicines);
                rowCount++;
            },
            error: function () {
                alert("Không thể tải dữ liệu thuốc.");
            }
        });
    }

    function addMedicineRow(medicine = null, index, medicines = []) {
        const tbody = document.getElementById('editMedicinesBody');
        console.log("Adding medicine row:", medicine);

        let medicineOptions = `<option value="">Thuốc</option>`;
        medicines.forEach(t => {
            medicineOptions += `<option value="${t.maThuoc}" data-dvt="${t.donViTinh}" ${medicine && medicine.maThuoc === t.maThuoc ? 'selected' : ''}>${t.tenThuoc}</option>`;
        });

        const row = `
        <tr>
            <td>
                <select class="form-control" name="Medicines[${index}].MaThuoc" required onchange="showDonViTinh(this); loadMedicineBatches(this, ${index}, '${medicine ? medicine.soLo : ''}')">
                    ${medicineOptions}
                </select>
            </td>
            <td>
                <select class="form-control" name="Medicines[${index}].SoLo" required>
                    <option value="">Chọn Số Lô</option>
                </select>
            </td>
            <td><input type="number" class="form-control" name="Medicines[${index}].SoLuongHienTai" readonly></td>
            <td><input type="date" class="form-control" name="Medicines[${index}].HanSuDung" readonly></td>
            <td><input type="number" class="form-control" name="Medicines[${index}].SoLuongXuat" value="${medicine ? medicine.soLuongXuat : ''}" required oninput="validateQuantity(this); updateSoLuongHienTai(${index});"></td>
            <td><input type="text" class="form-control" name="Medicines[${index}].DonViTinh" value="${medicine ? medicine.donViTinh : ''}" readonly></td>
            <td><input type="number" class="form-control" name="Medicines[${index}].DonGia" value="${medicine ? medicine.donGia : ''}" required oninput="validatePositiveValue(this)" ></td>
            <td><button type="button" class="btn btn-danger" onclick="removeRow(this)">Xóa</button></td>
        </tr>
        `;

        tbody.insertAdjacentHTML('beforeend', row);
        loadMedicineBatches(tbody.lastElementChild.querySelector(`select[name="Medicines[${index}].MaThuoc"]`), index, medicine ? medicine.soLo : '');
        updateRowIndexes();
        updateOptionsInAllRows();
    }

    function updateRowIndexes() {
        const rows = document.querySelectorAll('#editMedicinesBody tr');
        rows.forEach((row, index) => {
            row.querySelector('select[name*="MaThuoc"]').name = `Medicines[${index}].MaThuoc`;
            row.querySelector('select[name*="SoLo"]').name = `Medicines[${index}].SoLo`;
            row.querySelector('input[name*="SoLuongHienTai"]').name = `Medicines[${index}].SoLuongHienTai`;
            row.querySelector('input[name*="HanSuDung"]').name = `Medicines[${index}].HanSuDung`;
            row.querySelector('input[name*="SoLuongXuat"]').name = `Medicines[${index}].SoLuongXuat`;
            row.querySelector('input[name*="DonViTinh"]').name = `Medicines[${index}].DonViTinh`;
            row.querySelector('input[name*="DonGia"]').name = `Medicines[${index}].DonGia`;
        });
        rowCount = rows.length;
    }

    function loadMedicineBatches(selectElement, rowIndex, selectedSoLo = "") {
        const medicineId = selectElement.value;
        if (!medicineId) return;

        fetch(`/Dashboard/XuatKho/chiTietLo/${medicineId}`)
            .then(response => response.json())
            .then(data => {
                const row = selectElement.closest('tr');
                const soLoDropdown = row.querySelector(`select[name="Medicines[${rowIndex}].SoLo"]`);
                const soLuongHienTaiInput = row.querySelector(`input[name="Medicines[${rowIndex}].SoLuongHienTai"]`);
                const hanSuDungInput = row.querySelector(`input[name="Medicines[${rowIndex}].HanSuDung"]`);

                soLoDropdown.innerHTML = `<option value="">Chọn Số Lô</option>`;

                data.forEach(batch => {
                    const option = document.createElement('option');
                    option.value = batch.soLo;
                    option.textContent = `${batch.soLo} - SL Hiện Tại: ${batch.soLuongHienTai}`;
                    option.dataset.soLuongHienTai = batch.soLuongHienTai;
                    option.dataset.hanSuDung = batch.hanSuDung;

                    if (selectedSoLo && selectedSoLo === batch.soLo) {
                        option.selected = true;
                        hanSuDungInput.value = batch.hanSuDung;
                        soLuongHienTaiInput.value = batch.soLuongHienTai;
                    }
                    soLoDropdown.appendChild(option);
                });

                if (!soLoDropdown.dataset.listenerAdded) {
                    soLoDropdown.addEventListener('change', () => {
                        const selectedOption = soLoDropdown.options[soLoDropdown.selectedIndex];
                        hanSuDungInput.value = selectedOption.dataset.hanSuDung || '';
                        soLuongHienTaiInput.value = parseInt(selectedOption.dataset.soLuongHienTai || 0) + parseInt(row.querySelector(`input[name="Medicines[${rowIndex}].SoLuongXuat"]`).value || 0);
                    });
                    soLoDropdown.dataset.listenerAdded = true;
                }

                if (selectedSoLo) {
                    soLoDropdown.dispatchEvent(new Event('change'));
                }
            })
            .catch(error => console.error('Error fetching batch data:', error));
    }

</script>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>


        function confirmDelete(soPhieu) {
            if (confirm("Bạn có chắc chắn muốn xóa phiếu nhập này không?")) {
                $.ajax({
                    type: "POST",
                    url: "/Dashboard/XuatKho/Delete/" + soPhieu,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            alert("Xóa thành công!");
                            location.reload();
                        } else {
                            alert("Không thể xóa phiếu nhập.");
                        }
                    },
                    error: function () {
                        alert("Có lỗi xảy ra khi xóa phiếu nhập.");
                    }
                });
            }
        }
    </script>
}
